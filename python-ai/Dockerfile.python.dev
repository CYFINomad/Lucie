FROM python:3.11-slim

# Installer les dépendances système nécessaires
RUN apt-get update && apt-get install -y \
    build-essential \
    python3-dev \
    git \
    libgomp1 \
    procps \
    wget \
    curl \
    unzip \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Créer les répertoires nécessaires
RUN mkdir -p /app/logs /app/data

# Mettre à jour pip
RUN pip install --upgrade pip

# Copier les requirements et installer les dépendances
COPY requirements.txt .

# Installer d'abord NumPy pour éviter certains problèmes de dépendances
RUN pip install --no-cache-dir "numpy>=1.24.0,<1.26.0"

# Installer PyTorch pour CPU (version légère)
RUN pip install --no-cache-dir "torch>=2.0.0" --index-url https://download.pytorch.org/whl/cpu

# Installer les modèles transformers nécessaires
RUN pip install --no-cache-dir "transformers>=4.30.0" "sentence-transformers>=2.2.0"

# Installer FastAPI et dépendances web
RUN pip install --no-cache-dir fastapi==0.104.1 uvicorn[standard]==0.24.0 pydantic==2.4.2 python-dotenv==1.0.0

# Installer les clients de base de données
RUN pip install --no-cache-dir neo4j==5.14.0 redis==5.0.1 weaviate-client>=3.25.0

# Installer les outils gRPC
RUN pip install --no-cache-dir grpcio==1.59.2 grpcio-tools==1.59.2

# Installer les outils de développement
RUN pip install --no-cache-dir pytest==7.4.3 pytest-cov==4.1.0 black==23.10.1 pylint==3.0.2

# Installer les bibliothèques d'IA/ML supplémentaires
RUN pip install --no-cache-dir scikit-learn>=1.3.0 nltk>=3.8.1

# Installer les autres dépendances
RUN pip install --no-cache-dir requests==2.31.0 httpx==0.25.1 tenacity==8.2.3 debugpy

# Télécharger les ressources NLTK nécessaires pour NLP
RUN python -m nltk.downloader punkt stopwords wordnet omw-1.4

# Copier le reste de l'application
COPY . .

# Créer un fichier .env par défaut si nécessaire
RUN if [ ! -f .env ]; then cp .env.example .env 2>/dev/null || echo "DEBUG=True" > .env; fi

# Exposition des ports pour l'API HTTP, gRPC et le débogage
EXPOSE 8000 50051 5678

# Commande de démarrage pour le développement avec rechargement à chaud
CMD ["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "-m", "uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]