version: '3.8'

services:
  lucie-node:
    build:
      context: ./backend
      dockerfile: Dockerfile.node
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PYTHON_API_URL=http://lucie-python:8000
      - GRPC_SERVER=lucie-python:50051
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URL=redis://redis:6379
    depends_on:
      - lucie-python
      - neo4j
      - redis
    restart: unless-stopped
    networks:
      - lucie-network

  lucie-python:
    build:
      context: ./python-ai
      dockerfile: Dockerfile.python
    volumes:
      - ./python-ai:/app
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DEBUG=True
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URL=redis://redis:6379
    depends_on:
      - neo4j
      - redis
    restart: unless-stopped
    networks:
      - lucie-network

  lucie-ui:
    build:
      context: ./lucie-ui
      dockerfile: Dockerfile.ui
    volumes:
      - ./lucie-ui:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    depends_on:
      - lucie-node
    networks:
      - lucie-network

  neo4j:
    image: neo4j:5.14.0
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
    networks:
      - lucie-network

  redis:
    image: redis:7.2.3
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lucie-network

networks:
  lucie-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  redis_data: