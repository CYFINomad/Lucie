version: "3.8"

services:
  lucie-node:
    build:
      context: ./backend
      dockerfile: Dockerfile.node.dev
    volumes:
      - ./backend:/app
      - node_modules:/app/node_modules
    ports:
      - "5000:5000"
      - "9229:9229"
    environment:
      - NODE_ENV=development
      - PYTHON_API_URL=http://lucie-python:8000
      - GRPC_SERVER=lucie-python:50051
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URL=redis://redis:6379
      - FEATURE_MULTI_AI=false
      - FEATURE_VOICE_INPUT=true
      - FEATURE_AVATAR_VISUAL=true
      - FEATURE_PROACTIVE=true
    depends_on:
      - lucie-python
      - neo4j
      - redis
    networks:
      - lucie-network
    command: npm run dev
    # Active le debugger pour VS Code
    security_opt:
      - seccomp:unconfined
    # Support pour le debugger
    cap_add:
      - SYS_PTRACE

  lucie-python:
    build:
      context: ./python-ai
      dockerfile: Dockerfile.python.dev
    volumes:
      - ./python-ai:/app
      - python_packages:/usr/local/lib/python3.11/site-packages
    ports:
      - "8000:8000"
      - "50051:50051"
      - "5678:5678" # Pour le debugging Python
    environment:
      - PYTHONUNBUFFERED=1
      - DEBUG=True
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URL=redis://redis:6379
      - WEAVIATE_URL=http://weaviate:8080
    depends_on:
      - neo4j
      - redis
      - weaviate
    networks:
      - lucie-network
    command: >
      sh -c "python -m debugpy --listen 0.0.0.0:5678 -m uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload"

  lucie-ui:
    build:
      context: ./lucie-ui
      dockerfile: Dockerfile.ui.dev
    volumes:
      - ./lucie-ui:/app
      - ui_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:5000
      - WDS_SOCKET_PORT=3000
    depends_on:
      - lucie-node
    networks:
      - lucie-network
    command: npm start

  neo4j:
    image: neo4j:5.14.0
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
    networks:
      - lucie-network

  redis:
    image: redis:7.2.3
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lucie-network
    command: redis-server --appendonly yes

  weaviate:
    image: semitechnologies/weaviate:1.22.4
    ports:
      - "8080:8080"
    environment:
      - QUERY_DEFAULTS_LIMIT=20
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=text2vec-transformers
      - ENABLE_MODULES=text2vec-transformers
      - TRANSFORMERS_INFERENCE_API=http://t2v-transformers:8080
    volumes:
      - weaviate_data:/var/lib/weaviate
    depends_on:
      - t2v-transformers
    networks:
      - lucie-network

  t2v-transformers:
    image: semitechnologies/transformers-inference:sentence-transformers-multi-qa-MiniLM-L6-cos-v1
    environment:
      - ENABLE_CUDA=0
    networks:
      - lucie-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - lucie-network

networks:
  lucie-network:
    driver: bridge

volumes:
  node_modules:
  python_packages:
  ui_node_modules:
  neo4j_data:
  neo4j_logs:
  redis_data:
  weaviate_data:
